import { MutationBase } from './mutation';
import { OrderGatewayBase } from './order-gateway';
export interface ValueLedgerBase {
    readonly id: string;
    approveValue(value: string, accountId: string | OrderGatewayBase): Promise<MutationBase>;
    disapproveValue(accountId: string | OrderGatewayBase): Promise<MutationBase>;
    getApprovedValue(accountId: string, spenderId: string): Promise<String>;
    getBalance(accountId: string): Promise<string>;
    getInfo(): Promise<ValueLedgerInfo>;
    isApprovedValue(value: string, accountId: string | OrderGatewayBase, spenderId: string): Promise<Boolean>;
    transferValue(recipe: ValueLedgerTransferRecipe): Promise<MutationBase>;
}
export interface ValueLedgerDeployRecipe {
    name: string;
    symbol: string;
    decimals: string;
    supply: string;
}
export interface ValueLedgerInfo {
    name: string;
    symbol: string;
    decimals: number;
    supply: string;
}
export interface ValueLedgerTransferRecipe {
    senderId?: string;
    receiverId: string;
    value: string;
}
